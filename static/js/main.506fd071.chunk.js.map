{"version":3,"sources":["api/api.js","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["request","url","a","fetch","response","ok","Error","status","json","getTodos","then","result","data","filter","todo","title","getUser","userId","Todo","selectUser","className","classNames","completed","type","readOnly","checked","onClick","TodoList","state","todos","select","handleSearchUser","event","value","target","sortTotos","includes","setState","handleSelect","name","selectCategory","this","placeholder","onChange","map","props","React","Component","CurrentUser","user","loadSelectedUser","prevProps","email","phone","handleClear","App","selectedUserId","userID","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.506fd071.chunk.js","sourcesContent":["const BASE__URL = 'https://mate-api.herokuapp.com/';\n\nconst request = async(url) => {\n  const response = await fetch(`${BASE__URL}${url}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport async function getTodos() {\n  return (\n    request('todos')\n      .then(result => result.data)\n      .then(data => data.filter(todo => todo.title))\n  );\n}\n\nexport const getUser = async(userId) => {\n  const response = await request(`users/${userId}`);\n\n  return response.data;\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\n\nexport function Todo({ todo, selectUser }) {\n  return (\n    <li className={classNames(\n      'TodoList__item',\n      { 'TodoList__item--unchecked': todo.completed },\n      { 'TodoList__item--checked': !todo.completed },\n    )}\n    >\n      <label>\n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={!todo.completed}\n\n        />\n        <p>{todo.title}</p>\n      </label>\n      <button\n        type=\"button\"\n        className=\"\n          TodoList__user-button\n          TodoList__user-button--selected\n          button\n        \"\n        onClick={() => selectUser(todo.userId)}\n      >\n        User&nbsp;#\n        {todo.userId}\n      </button>\n    </li>\n  );\n}\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    completed: PropTypes.bool,\n    createdAt: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    updatedAt: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number,\n  }).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\nimport { getTodos } from '../../api/api';\nimport { Todo } from '../Todo/Todo';\n\nexport class TodoList extends React.Component {\n  state = {\n    todos: [],\n    select: '',\n  }\n\n  async componentDidMount() {\n    this.setState({ todos: await getTodos() });\n  }\n\n  handleSearchUser = async(event) => {\n    const { value } = event.target;\n    const todos = await getTodos();\n\n    const sortTotos = todos.filter(todo => todo.title.includes(value));\n\n    this.setState({ todos: sortTotos });\n  }\n\n  handleSelect = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n\n    return this.selectCategory(value);\n  }\n\n  selectCategory = async(select) => {\n    const todos = await getTodos();\n\n    switch (select) {\n      case 'completed':\n        this.setState({ todos: todos.filter(\n          todo => !todo.completed,\n        ) });\n        break;\n      case 'active':\n        this.setState({ todos: todos.filter(\n          todo => todo.completed,\n        ) });\n        break;\n      default:\n        this.setState({ todos });\n    }\n  }\n\n  render() {\n    const { todos, select } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <>\n          <input\n            className=\"input is-rounded\"\n            type=\"text\"\n            placeholder=\"type title here\"\n            onChange={this.handleSearchUser}\n          />\n          <div className=\"select is-rounded\">\n            <select\n              name=\"select\"\n              value={select}\n              onChange={this.handleSelect}\n            >\n              <option>all</option>\n              <option>active</option>\n              <option>completed</option>\n            </select>\n          </div>\n        </>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <Todo\n                todo={todo}\n                selectUser={this.props.selectUser}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.loadSelectedUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadSelectedUser();\n    }\n  }\n\n  async loadSelectedUser() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return !user ? (\n      <h1>Choice user</h1>\n    ) : (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${this.props.userId}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          type=\"button\"\n          onClick={() => this.props.handleClear()}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  handleClear: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    selectedUserId: 0,\n  };\n\n  selectUser = (userID) => {\n    this.setState({ selectedUserId: userID });\n  }\n\n  handleClear = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            selectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                handleClear={this.handleClear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}