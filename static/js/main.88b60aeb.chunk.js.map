{"version":3,"sources":["api/api.js","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["request","url","a","fetch","response","ok","Error","status","json","getTodos","data","getUser","userId","Todo","todo","selectUser","className","classNames","completed","type","readOnly","checked","title","onClick","TodoList","state","todos","select","handleSearchUSer","event","value","target","filter","includes","setState","handleSelect","name","selectCategory","this","placeholder","onChange","map","props","React","Component","CurrentUser","user","loadSelectUser","prevProps","email","phone","handleClear","App","selectedUserId","userID","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88b60aeb.chunk.js","sourcesContent":["const BASE__URL = 'https://mate-api.herokuapp.com/';\n\nconst request = async(url) => {\n  const response = await fetch(`${BASE__URL}${url}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport const getTodos = async() => {\n  const response = await request('todos');\n\n  return response.data;\n};\n\nexport const getUser = async(userId) => {\n  const response = await request(`users/${userId}`);\n\n  return response.data;\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\n\nexport function Todo({ todo, selectUser }) {\n  return (\n    <li className={classNames(\n      'TodoList__item',\n      { 'TodoList__item--unchecked': todo.completed },\n      { 'TodoList__item--checked': !todo.completed },\n    )}\n    >\n      <label>\n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={!todo.completed}\n\n        />\n        <p>{todo.title}</p>\n      </label>\n      <button\n        type=\"button\"\n        className=\"\n          TodoList__user-button\n          TodoList__user-button--selected\n          button\n        \"\n        onClick={() => selectUser(todo.userId)}\n      >\n        User&nbsp;#\n        {todo.userId}\n      </button>\n    </li>\n  );\n}\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    completed: PropTypes.bool,\n    createdAt: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    updatedAt: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number,\n  }).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\nimport { getTodos } from '../../api/api';\nimport { Todo } from '../Todo/Todo';\n\nexport class TodoList extends React.Component {\n  state = {\n    todos: [],\n    select: '',\n  }\n\n  async componentDidMount() {\n    this.setState({ todos: await getTodos() });\n  }\n\n  handleSearchUSer = async(event) => {\n    const { value } = event.target;\n    let todos = await getTodos();\n\n    todos = todos.filter(todo => ((todo.title !== null)\n      ? todo.title.includes(value)\n      : null));\n\n    this.setState({ todos });\n  }\n\n  handleSelect = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n\n    return this.selectCategory(value);\n  }\n\n  selectCategory = async(select) => {\n    const todos = await getTodos();\n\n    if (select === 'completed') {\n      return this.setState({ todos: todos.filter(\n        todo => !todo.completed,\n      ) });\n    }\n\n    if (select === 'active') {\n      return this.setState({ todos: todos.filter(\n        todo => todo.completed,\n      ) });\n    }\n\n    return this.setState({ todos });\n  }\n\n  render() {\n    const { todos, select } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <>\n          <input\n            className=\"input is-rounded\"\n            type=\"text\"\n            placeholder=\"type title here\"\n            onChange={this.handleSearchUSer}\n          />\n          <div className=\"select is-rounded\">\n            <select\n              name=\"selectValue\"\n              value={select}\n              onChange={this.handleSelect}\n            >\n              <option>all</option>\n              <option>active</option>\n              <option>completed</option>\n            </select>\n          </div>\n        </>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <Todo\n                todo={todo}\n                selectUser={this.props.selectUser}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.loadSelectUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadSelectUser();\n    }\n  }\n\n  async loadSelectUser() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return !user ? (\n      <h1>Choice user</h1>\n    ) : (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${this.props.userId}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          type=\"button\"\n          onClick={() => this.props.handleClear()}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  handleClear: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    selectedUserId: 0,\n  };\n\n  selectUser = (userID) => {\n    this.setState({ selectedUserId: userID });\n  }\n\n  handleClear = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            selectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                handleClear={this.handleClear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}